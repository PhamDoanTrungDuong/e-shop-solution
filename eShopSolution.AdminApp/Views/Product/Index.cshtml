@using eShopSolution.ViewModels.Common
@model PagedResult<eShopSolution.ViewModels.Catalog.Products.ProductVm>

@{
    ViewData["Title"] = "Products List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts{
    <script>
        setTimeout(function () {
            $('#msgAlert').fadeOut('slow');
        }, 1500);
    </script>
}

<div class="container-fluid px-4">
    <h1 class="mt-4">Products List</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="index.html">Home</a></li>
        <li class="breadcrumb-item active">Products List</li>
    </ol>

    <div class="card mb-4">
        <div class="card-header">
            <a class="btn btn-success mb-4 mt-4" asp-action="Create" asp-controller="Product">Create</a>
            <div class="col-md-12 col-xs-12">
                <form asp-action="Index" method="get">
                    <div class="row">
                        <div class="col-md-9">
                            <input type="text" value="@ViewBag.Keyword" name="keyword" class="form-control mb-4" />
                        </div>
                        <div class="col-md-3">
                            <button type="submit" class="btn btn-primary">Search</button>
                            <button type="button" onclick="window.location.href='/Product/Index'" class="btn btn-dark">Reset</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="card-body">
            <div class="row">
                @if (ViewBag.SuccessMsg != null)
                {
                    <div id="msgAlert" class="alert alert-success" role="alert">
                        @ViewBag.SuccessMsg
                    </div>
                }
            </div>
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead>
                        <tr>

                            <th>
                                Code
                            </th>
                            <th>
                                Name
                            </th>
                            <th>
                                Import price
                            </th>
                            <th>
                                Price
                            </th>
                            <th>
                                Quantity
                            </th>

                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Items)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Id)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.OriginalPrice)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Price)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Stock)
                                </td>
                                <td>
                                    @Html.ActionLink("Edit", "Edit", new { id = item.Id })|
                                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            @await Component.InvokeAsync("Pager", Model)
        </div>
    </div>
</div>